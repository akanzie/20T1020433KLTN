@using KLTN20T1020433.Domain.Submission
@model KLTN20T1020433.Web.Areas.Student.Models.SubmissionModel
@{
    Layout = null;
}
<div class="card mb-4">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="text-dark fw-semibold">Bài nộp của bạn</h4>
            <p class="mb-0 text-end fs-3" id="submissionStatus">
                @if (Model.Submission.Status == SubmissionStatus.Absent)
                {
                    <span class="text-danger">@Model.Submission.StatusDisplayName</span>

                }
                @if (Model.Submission.Status == SubmissionStatus.NotSubmitted)
                {
                    <span class="text-primary">@Model.Submission.StatusDisplayName</span>

                }
                @if (Model.Submission.Status == SubmissionStatus.Submitted)
                {
                    <span class="text-success">@Model.Submission.StatusDisplayName</span>

                }
                @if (Model.Submission.Status == SubmissionStatus.LateSubmission)
                {
                    <span class="text-dark">@Model.Submission.StatusDisplayName</span>

                }
                @if (Model.Submission.Status == SubmissionStatus.PendingProcessing)
                {
                    <span class="text-dark">@Model.Submission.StatusDisplayName</span>
                }
            </p>           

        </div>
    </div>
    <div class="card-body pt-0">
        <!-- Hiển thị file bài nộp của sinh viên -->
        <div class="mb-3">
            <div id="submission_files">
            </div>
            <form action="UploadSubmissionFile" class="form-group" enctype="multipart/form-data">

                <input type="file" class="d-none" multiple id="fileInput" />
                @if (Model.Submission.Status == SubmissionStatus.NotSubmitted)
                {
                    <button id="selectFileBtn" type="button" class="btn btn-outline-secondary form-control">Thêm file</button>
                }
                else if (Model.Submission.Status == SubmissionStatus.Absent)
                {
                    <button id="selectFileBtn" type="button" class="btn btn-outline-secondary form-control disabled" disabled>Thêm file</button>
                }
            </form>

            @if (Model.Submission.Status == SubmissionStatus.NotSubmitted)
            {
                <button id="submitBtn" class="btn btn-primary mt-4 form-control" type="button">Nộp bài</button>

            }
            else if (Model.Submission.Status == SubmissionStatus.Absent)
            {
                <button id="submitBtn" class="btn btn-primary mt-4 form-control disabled" disabled type="button">Nộp bài</button>
            }
            else
            {
                <button id="cancelBtn" class="btn btn-primary mt-4 form-control" type="button">Hủy nộp bài</button>
            }

        </div>
    </div>
</div>
<div class="card">
    <div class="bg-white py-3 ms-4">
        <div class="d-flex align-items-center">
            <span><i class="ti ti-user me-2"></i></span>
            @if (Model.Comments != null && Model.Comments.Any())
            {
                <span class="card-title mb-0">@Model.Comments.Count() nhận xét riêng tư</span>
            }
            else
            {
                <span class="card-title mb-0">Chưa có nhận xét riêng tư</span>
            }
        </div>
    </div>
    <div class="mb-3 ms-4">
        <div class="container">
            <div class="row align-items-center">
                @if (Model.Comments != null && Model.Comments.Any())
                {
                    @foreach (var item in Model.Comments)
                    {
                        <div class="col">
                            <div class="d-flex justify-content-between">
                                <p class="mb-0  "><strong>@item.TeacherName</strong></p>
                                <p class="mb-0 text-muted">@item.CommentedTime</p>
                            </div>
                            <p class="mb-0  fw-bold text-dark">@item.Body</p>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var testId = @Model.Submission.TestId;
        bindEvents(testId);
        getFiles(testId);
    });
    function bindEvents(testId) {
        $('#selectFileBtn').off('click').on('click', function () {
            $('#fileInput').click();
        });

        $(document).on('click', '.remove-button', function () {
            var fileId = $(this).data('fileid');
            removeFile(fileId, testId);
        });

        $('#submitBtn').on('click', function () {
            openModalWithConfirmation('Gửi bài nộp của bạn?', 'Nộp bài nếu bạn đã kiểm tra các tệp đính kèm.', 'Nộp bài', function () {
                submit(testId);
            });
        });
        $('#cancelBtn').on('click', function () {
            openModalWithConfirmation('Hủy nộp bài?', 'Hủy gửi để thêm hoặc thay đổi tệp đính kèm. Đừng quên gửi lại khi bạn đã hoàn tất.', 'Hủy nộp bài', function () {
                cancel(testId);
            });
        });
        $('#fileInput').off('change').on('change', function () {
            var check = checkFileSize(this);
            if (check)
                uploadFiles(testId);
        });
    }
    function getFiles(testId) {
        var url = '@Url.Action("ListSubmissionFiles", "Test")';
        $.ajax({
            url: url,
            type: "GET",
            data: { testId: testId },
            success: function (data) {
                $("#submission_files").html(data);
            },
            error: function (xhr, status, error) {
                handleAjaxError(xhr);
            },
        });
    }
    function removeFile(fileId, testId) {
        var url = '@Url.Action("RemoveSubmissionFile", "Test")';
        $.ajax({
            url: url,
            type: 'POST',
            data: { id: fileId, testId: testId },
            success: function (response) {
                showToast(response);
                getFiles(testId);
            },
            error: function (xhr, status, error) {
                handleAjaxError(xhr);
            },
        });
    }
    function uploadFiles(testId) {
        var formData = new FormData();
        var files = $('#fileInput')[0].files;
        $.each(files, function (index, file) {
            formData.append('files', file);
        });
        formData.append('testId', testId);
        var url = '@Url.Action("UploadSubmissionFile", "Test")';
        $.ajax({
            url: url,
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                showToast(response);
                $('#fileInput').val('');
                getFiles(testId);
            },
            error: function (xhr, status, error) {
                handleAjaxError(xhr);
            },
        });
    }
    function submit(testId) {
        var url = '@Url.Action("Submit", "Test")';
        $.ajax({
            url: url,
            type: 'POST',
            data: { testId: testId },
            success: function (response) {
                showToast(response);
                getSubmission(testId);
            },
            error: function (xhr, status, error) {
                handleAjaxError(xhr);
            },
        });
    }
    function cancel(testId) {
        var url = '@Url.Action("Cancel", "Test")';
        $.ajax({
            url: url,
            type: 'POST',
            data: { testId: testId },
            success: function (response) {
                showToast(response);
                getSubmission(testId);
            },
            error: function (xhr, status, error) {
                handleAjaxError(xhr);
            },
        });
    }

</script>
