@using KLTN20T1020433.Web.AppCodes
@model KLTN20T1020433.Web.Areas.Teacher.Models.SelectStudentModel
@{
    Layout = "~/Areas/Teacher/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid ps-0 pe-0">
    <div class="card">
        <div class="card-body">
            <ol class="breadcrumb">
                <li class="breadcrumb-item fw-semibold fs-8 text-dark">@ViewBag.Title</li>
                <li class="breadcrumb-item fw-semibold fs-8 text-dark d-md-flex d-none">Chọn sinh viên tham gia</li>
            </ol>
            <div class="d-flex justify-content-between flex-wrap">
                <div class="d-flex justify-content-start align-items-center flex-wrap mb-3">
                    <!-- Button trigger modal -->
                    @if (Model.TestType == KLTN20T1020433.Domain.Test.TestType.Quiz)
                    {
                        <button type="button" class="btn btn-outline-primary me-2" data-bs-toggle="modal"
                                data-bs-target="#studentModal">
                            Chọn sinh viên khác
                        </button>
                    }
                    @if (Model.Semester != 0)
                    {
                        <span class="fw-semibold btn btn-outline-info me-2" id="selectSemester" data-bs-toggle="modal" data-bs-target="#selectSemesterModal">Học kỳ: @Model.Semester , Năm học: @Model.SchoolYear</span>
                    }
                    else
                    {
                        <span class="fw-semibold btn btn-outline-info me-2" id="selectSemester" data-bs-toggle="modal" data-bs-target="#selectSemesterModal">Chọn học kỳ, năm học</span>
                    }
                </div>

                <div class="mb-3">
                    <button id="cancelBtn" type="button" class="btn btn-outline-muted me-2" style="width:100px">Hủy</button>
                    <button id="saveBtn" type="button" class="btn btn-success" style="width:100px">Lưu</button>
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-5">
                    <div class="col-lg mb-4 border rounded p-3">
                        <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
                            <div class="d-flex align-items-center mb-2">
                                <h4 class="mb-0 me-1 fw-semibold">Sinh viên</h4>
                                <span class="fw-semibold" id="studentCount"></span>
                            </div>
                            <div class="">
                                @if (Model.TestType == KLTN20T1020433.Domain.Test.TestType.Quiz)
                                {
                                    <select class="form-select" id="Course" name="courseId">
                                        <option selected value="">Chọn lớp học phần</option>

                                    </select>
                                }
                                else
                                {
                                    <select class="form-select" id="Exam" name="examId">
                                        <option selected value="">Chọn lịch thi</option>
                                    </select>
                                }
                            </div>
                        </div>
                        <div class="mb-4">
                            <div class="input-group mb-3">
                                <input type="text" class="form-control search-input" placeholder="Tìm kiếm..." aria-label="Tìm kiếm...">
                                <button class="btn btn-outline-secondary" type="button" id="searchStudentBtn">Tìm kiếm</button>
                            </div>
                        </div>

                        <div id="listStudents">
                        </div>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="col-lg mb-4 border rounded mt-4">
                        <div class="d-block">
                            <button id="selectBtn" class="btn btn-outline-primary w-100 d-block"><span class="fw-semibold text-center me-3">Chọn</span><i class="bi bi-caret-right-square"></i></button>
                            <button id="removeBtn" class="btn btn-outline-secondary w-100 d-block"><i class="bi bi-caret-left-square"></i><span class="fw-semibold text-center ms-3">Bỏ</span></button>
                        </div>
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="col-lg mb-4 border rounded p-3">
                        <div class="d-flex align-items-center mb-4">
                            <h4 class="mb-0 me-1 fw-semibold">Danh sách tham gia</h4>
                            <span class="fw-semibold" id="selectedStudentCount"></span>
                        </div>
                        <div class="mb-4">
                            <div class="input-group mb-3">
                                <input type="text" class="form-control search-input" placeholder="Tìm kiếm..." aria-label="Tìm kiếm...">
                                <button class="btn btn-outline-secondary" type="button" id="searchSelectedBtn">Tìm kiếm</button>
                            </div>
                        </div>

                        <div id="selectedStudents"></div>

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="studentModal" tabindex="-1" aria-labelledby="studentModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="studentModalLabel">Danh sách sinh viên</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="input-group mb-3" action="@Url.Action("SearchStudents","Test")" id="searchStudents" data-container="#searchResult" method="post">
                    <input type="text" class="form-control" placeholder="Tìm kiếm..."
                           aria-label="Tìm kiếm..." name="searchValue">
                    <button class="btn btn-outline-secondary" type="submit">
                        Tìm
                        kiếm
                    </button>
                </form>
                <div id="searchResult">
                </div>
            </div>
            <div class="modal-footer">
                <button id="selectButton" type="button" class="btn btn-primary" data-bs-dismiss="modal">
                    Chọn
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    Đóng
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="selectSemesterModal" tabindex="-1" aria-labelledby="selectSemesterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="selectSemesterLabel">Chọn học kỳ và năm học</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-2">
                    <div class="col-md-6">
                        <label for="Semester">Học kỳ:</label>
                        <select class="form-select" id="Semester" name="Semester">
                            @switch (Model.Semester)
                            {
                                case 1:
                                    <option value="1" selected>Học kỳ 1</option>
                                    <option value="2">Học kỳ 2</option>
                                    <option value="3">Học kỳ 3</option>
                                    break;
                                case 2:
                                    <option value="1">Học kỳ 1</option>
                                    <option value="2" selected>Học kỳ 2</option>
                                    <option value="3">Học kỳ 3</option>
                                    break;
                                case 3:
                                    <option value="1">Học kỳ 1</option>
                                    <option value="2">Học kỳ 2</option>
                                    <option value="3" selected>Học kỳ 3</option>
                                    break;
                                default:
                                    <option value="1" selected>Học kỳ 1</option>
                                    <option value="2">Học kỳ 2</option>
                                    <option value="3">Học kỳ 3</option>
                                    break;
                            }
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="SchoolYear">Năm học:</label>
                        <select class="form-select" id="SchoolYear" name="SchoolYear">
                            @foreach (var item in Model.SchoolYears)
                            {
                                if (item.NamHoc == Model.SchoolYear)
                                {
                                    <option value="@item.NamHoc" selected>@item.NamHoc</option>
                                }
                                else
                                {
                                    <option value="@item.NamHoc">@item.NamHoc</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <select class="form-select" id="Module" name="moduleId">
                    @if (Model.Module != null && Model.Module.ModuleName != "")
                    {
                        <option selected value="@Model.Module.ModuleId">@Model.Module.ModuleName</option>
                    }
                    else
                    {
                        <option selected value="">Chọn học phần</option>
                    }

                </select>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="saveModule()">Lưu</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        function initialize() {
            var testId = @Model.TestId;
            bindEvents(testId);
            getSelectedStudents(testId);
            saveModule();
            countSubmission("#selectedStudentCount", testId);
            checkSelectedStudents(getSelectedStudentIds());
        }
        $(document).ready(function () {
            initialize();
        });
        function bindEvents(testId) {
            $("#searchStudents").submit(function (e) {
                e.preventDefault();
                doSearchStudents("#searchStudents");
                return;
            });
            $("#searchSelectedBtn").on('click', function () {
                searchStudents("#selectedStudents");
                return;
            });
            $("#searchStudentBtn").on('click', function () {
                searchStudents("#listStudents");
                return;
            });

            $('#cancelBtn').on('click', function () {
                cancelCreation(testId);
            });
            $("#saveBtn").on('click', function () {
                var moduleId = $('#Module').val();
                var semester = $('#Semester').val();
                var schoolYear = $('#SchoolYear').val();
                saveSelection(testId, getStudentSelection(), schoolYear + '.' + semester, moduleId);
                console.log(testId);
            });
            $('#Semester').on('change', function () {
                console.log('a');
                selectSemester();
            });
            $('#SchoolYear').on('change', function () {
                console.log('a');
                selectSemester();
            });
            $('#Course').on('change', function () {
                selectCourse(getSelectedStudentIds());
            });
            $('#selectButton').on('click', function () {
                selectStudents("#searchResult");
                checkSelectedStudents(getSelectedStudentIds());
            });
            $('#selectBtn').on('click', function () {
                selectStudents("#listStudents");
                checkSelectedStudents(getSelectedStudentIds());
            });
            $('#removeBtn').on('click', function () {
                removeSelectedStudents();
                checkSelectedStudents(getSelectedStudentIds());
            });
        }
        function selectStudents(listStudent) {
            var students = [];
            $(listStudent + ' .student-checkbox:checked').each(function () {
                $(this).prop('checked', false);
                var studentId = $(this).val();
                var studentRow = $(this).closest('tr');
                var studentName = studentRow.find('td:nth-child(3)').text();
                students.push({ id: studentId, name: studentName });
                // Di chuyển sinh viên được chọn vào danh sách đã chọn
                var clonedStudentRow = studentRow.clone();
                // Thêm hàng sinh viên đã sao chép vào danh sách mới
                $('#selectedStudents tbody').append(clonedStudentRow);
            });
            updateSelectedStudentCount();
        }

        function checkSelectedStudents(selectedStudentIds) {
            $('#listStudents .student-checkbox').each(function () {
                var studentId = $(this).val();
                var isSelected = selectedStudentIds.some(function (student) {
                    return student == studentId;
                });
                if (isSelected) {
                    $(this).prop('disabled', true); // Nếu studentId được chọn, thêm disabled vào input
                } else {
                    $(this).prop('disabled', false); // Nếu không được chọn, bỏ disabled
                }
            });
        }
        function removeSelectedStudents() {
            $('#selectedStudents .student-checkbox:checked').each(function () {
                $(this).closest('tr').remove(); // Xóa hàng chứa sinh viên đã chọn
            });
            // Cập nhật lại số lượng sinh viên đã chọn
            updateSelectedStudentCount();
        }
        function updateSelectedStudentCount() {
            var selectedStudentCount = $('#selectedStudents .student-checkbox').length;
            $('#selectedStudentCount').text("(" + selectedStudentCount + ")");
        }
        function selectSemester() {
            var semester = $('#Semester').val();
            var schoolYear = $('#SchoolYear').val();
            getModules(schoolYear + '.' + semester);
        }
        function saveModule() {
            var moduleId = $('#Module').val();
            var semester = $('#Semester').val();
            var schoolYear = $('#SchoolYear').val();
            $('#selectSemester').text('Học kỳ: ' + semester + ', Năm học: ' + schoolYear);
            $('#selectSemesterModal').modal('hide');
            getCourses(schoolYear + '.' + semester, moduleId);
        }
        function searchStudents(resultContainer) {
            var searchValue = $(resultContainer).closest('.mb-4').find('.search-input').val().toLowerCase();

            $(resultContainer + " tbody tr").each(function () {
                var studentId = $(this).find("td:nth-child(2)").text().toLowerCase();
                var studentName = $(this).find("td:nth-child(3)").text().toLowerCase();
                if (studentName.includes(searchValue) || studentId.includes(searchValue)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }
        function selectCourse(selectedStudentIds) {
            var courseId = $('#Course').val();
            getStudents('Quiz', courseId);
            var studentCount = $('#Course').find(':selected').data('student-count');
            $('#studentCount').text(studentCount);
            checkSelectedStudents(selectedStudentIds);
        }
        function getSelectedStudentIds() {
            var selectedStudentIds = [];
            $('#selectedStudents .student-checkbox').each(function () {
                var studentId = $(this).val();
                selectedStudentIds.push(studentId);
            });
            return selectedStudentIds;
        }
        function getStudentSelection() {
            var selectedStudents = [];
            $('#selectedStudents .student-checkbox').each(function () {
                var studentId = $(this).val();
                console.log(studentId);
                var studentName = $(this).closest('tr').find('td:nth-child(3)').text();
                selectedStudents.push({ studentId: studentId, studentName: studentName });
            });
            return selectedStudents;
        }
        function countSubmission(item, testId) {
            var url = '@Url.Action("CountSubmission", "Submission")';
            $.ajax({
                url: url,
                type: 'POST',
                data: { testId: testId },
                success: function (response) {
                    if (response.success)
                        $(item).text("(" + response.count + ")");
                    else
                        $(item).text(0);
                },
                error: function (xhr, status, error) {
                    handleAjaxError(xhr);
                }
            });
        }

        function getStudents(type, courseId) {
            var url = '@Url.Action("GetStudents", "Test")';
            $.ajax({
                url: url,
                type: 'GET',
                data: {
                    courseId: courseId,
                    type: type
                },
                success: function (response) {
                    $("#listStudents").html(response);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        function getSelectedStudents(testId) {
            var url = '@Url.Action("GetSelectedStudents", "Test")';
            $.ajax({
                url: url,
                type: 'GET',
                data: { testId: testId },
                success: function (response) {
                    $("#selectedStudents").html(response);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
        function doSearchStudents(formSearchInput) {
            var url = "@Url.Action("SearchStudents", "Test")";
            var moduleId = $('#Module').val();
            var semester = $('#Semester').val();
            var schoolYear = $('#SchoolYear').val();
            var searchTerm = schoolYear + '.' + semester;
            var container = $(formSearchInput).data('container');
            var postData = $(formSearchInput).serializeArray();
            postData.push({ name: 'Semester', value: searchTerm });
            postData.push({ name: 'moduleId', value: moduleId });
            $.ajax({
                url: url,
                type: 'GET',
                data: postData,
                success: function (response) {
                    $(container).html(response);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        function saveSelection(testId, students, semester, moduleId) {
            var url = '@Url.Action("Save", "Test")';
            $.ajax({
                url: url,
                type: 'POST',
                data: { testId: testId, students: students, semester: semester, moduleId: moduleId },
                success: function (response) {
                    if (response.success)
                        window.location.href = '@Url.Action("Index", "Test")';
                    else {
                        showToast(response.message);
                    }
                },
                error: function (error) {
                    alert("Your request is not valid!");
                }
            });
        }
        function cancelCreation(testId) {
            var url = '@Url.Action("CancelCreation", "Test")';
            $.ajax({
                url: url,
                type: 'POST',
                data: { testId: testId },
                success: function (result) {
                    window.location.href = '@Url.Action("Index", "Test")';
                },
                error: function (error) {
                    alert("Your request is not valid!");
                }
            });
        }

        function getModules(semester) {
            var url = '@Url.Action("GetModules", "Test")';
            $.ajax({
                url: url,
                type: 'GET',
                data: { semester: semester },
                success: function (response) {
                    // Assuming response is a list of courses
                    var modules = response;
                    var moduleSelect = $('#Module');
                    moduleSelect.empty();
                    moduleSelect.append('<option selected value="">Chọn học phần</option>');
                    $.each(modules, function (index, module) {
                        moduleSelect.append('<option value="' + module.moduleId + '">' + module.moduleName + '</option>');
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
        function getCourses(semester, moduleId) {
            var url = '@Url.Action("GetCourses", "Test")';
            $.ajax({
                url: url,
                type: 'GET',
                data: { semester: semester, moduleId: moduleId },
                success: function (response) {
                    // Assuming response is a list of courses
                    var courses = response;
                    var courseSelect = $('#Course');
                    courseSelect.empty();
                    courseSelect.append('<option selected value="">Chọn lớp học phần</option>');
                    $.each(courses, function (index, course) {
                        courseSelect.append('<option value="' + course.courseId + '" data-student-count="(' + course.studentCount + ')">' + course.courseName + '</option>');
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    </script>
}

