@using KLTN20T1020433.Application.Services
@using KLTN20T1020433.Web.AppCodes
@using KLTN20T1020433.Domain.Submission
@model KLTN20T1020433.Web.Areas.Teacher.Models.SubmissionModel
@{
    Layout = "~/Areas/Teacher/Views/Shared/_Layout.cshtml";
}
<style>
    /* Ghi đè lên quy tắc của Bootstrap */
    .dropdown-toggle::after {
        display: none !important;
    }

    .dropdown-menu.show {
        display: block;
        max-height: 300px;
        overflow-y: auto;
    }

    .shadow-left {
        box-shadow: -3px 0 7px -6px rgba(0, 0, 0, 0.5);
    }

    .btn-status {
        color: black;
    }


        .btn-status.active {
            background-color: rgb(232,240,254);
            border-color: none;
            box-shadow: none;
        }

            .btn-status.active span {
                color: rgb(83,155,255);
            }

    .file-container {
        cursor: pointer;
    }

        .file-container.selected {
            background-color: rgba(0, 123, 255, 0.1); /* Change to desired selection color */
            border: 1px solid rgba(0, 123, 255, 0.5); /* Optional border to indicate selection */
        }

    .right-sidebar {
        position: fixed;
        top: 0;
        right: 0;
        width: 270px;
        height: 100%;
        background-color: #f8f9fa;
        box-shadow: -3px 0 7px -6px rgba(0, 0, 0, 0.5);
        padding: 1rem;
        z-index: 11;
        display: none;
    }

    .main-content {
        margin-right: 270px;
    }
</style>
<div class="container-fluid ps-0 pe-0 mw-100 overflow-hidden" style="height: calc(100% - 200px);">
    <div class="card mx-4">
        <div class="card-header shadow">
            <h2 class="d-none d-md-flex"><span class="">@Model.Title</span></h2>
            <h4 class="d-flex d-md-none"><span class="">@Model.Title</span></h4>
            <div class="d-flex justify-content-between">
                <div class="dropdown" style="width: 35rem; max-width: 600px">
                    <button class="dropdown-toggle p-6 d-block border-0 rounded-1 w-100 bg-light-info" type="button" id="dropdownMenuButton">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class=""><i class="bi bi-person"></i><span class="ms-2 text-dark">@Model.Submission.StudentName</span></div>
                            <div class="d-flex align-items-center">
                                <b class="me-3">
                                    @switch (Model.Submission.Status)
                                    {
                                        case SubmissionStatus.Absent:
                                            <span class="text-warning">@Model.Submission.StatusDisplayName</span>
                                            break;

                                        case SubmissionStatus.LateSubmission:
                                            <span class="text-danger">@Model.Submission.StatusDisplayName</span>
                                            break;
                                        case SubmissionStatus.PendingProcessing:
                                            <span class="text-info">@Model.Submission.StatusDisplayName</span>
                                            break;
                                        case SubmissionStatus.Submitted:
                                            <span class="text-success">@Model.Submission.StatusDisplayName</span>
                                            break;
                                        case SubmissionStatus.NotSubmitted:
                                            <span class="text-secondary">@Model.Submission.StatusDisplayName</span>
                                            break;
                                        default:
                                            // Handle other statuses or a default case if needed
                                            break;
                                    }
                                </b>
                                <i class="bi bi-caret-down-fill"></i>
                            </div>
                        </div>
                    </button>
                    <ul class="dropdown-menu p-0" id="studentList" style="width: 35rem; max-width: 600px">
                        <form id="formSearch" method="post" action="@Url.Action("SearchSubmission", "Test")">
                        <li class="d-flex align-items-center p-8 w-100 ">

                            <div class="me-2">
                                <input class="form-control" type="search" placeholder="Tìm kiếm" aria-label="Search" name="SearchValue" value="@Model.SearchQuery.SearchValue">
                            </div>
                            <div class="">
                                <button tye="submit" class="btn btn-outline-light btn-status" data-status="Submitted"><span class="">Đã nộp</span></button>
                            </div>
                            <div class="">
                                <button tye="submit" class="btn btn-outline-light btn-status" data-status="PendingProcessing"><span class="">Đang chờ xử lý</span></button>
                            </div>
                            <div class="">
                                <button tye="submit" class="btn btn-outline-light btn-status" data-status="LateSubmission"><span class="">Đã nộp muộn</span></button>
                            </div>
                            <input type="hidden" name="PageSize" value="@Model.SearchQuery.PageSize">
                            <input type="hidden" name="TestId" value="@Model.TestId">

                        </li>
                        </form>
                        <div id="searchStudent"></div>
                    </ul>
                </div>
                <button id="downloadBtn" class="btn btn-primary d-none d-lg-flex">
                    Tải xuống
                </button>
                <button id="toggleOnBtn" class="btn btn-secondary toggle-button d-lg-none d-flex"><i class="bi bi-toggle-on"></i></button>
            </div>
        </div>
        <div class="card-body pt-0">
            <div class="row">
                <div class="col-lg-9">
                    <div id="filePreview"></div>
                </div>
                <div class="col-lg-3 shadow-left d-lg-block d-none">
                    <div class="py-3 border-bottom">
                        <h4 class=""><span class="fw-semibold">Tệp</span></h4>
                        <div class="fs-3">Đã nộp vào @Model.Submission.SubmittedTime.Value.ToString(Converter.TimeWithDateAndMonth)</div>
                        @foreach (var file in Model.Files)
                        {
                            <div class="d-flex p-2 border rounded-1 file-container" data-file-id="@file.FileId">
                                @Html.Raw(Helper.GetIconClassFromFileExtension(file.FileType))
                                <span class="text-primary text-truncate me-2">@file.OriginalName</span>
                            </div>
                        }
                    </div>
                    <div class="">
                        <div id="comments"></div>
                    </div>
                    <form id="formComment" action="@Url.Action("Comment", "Test")" class="input-group-lg" method="post">
                        <input class="form-control mb-2" type="text" placeholder="Thêm nhận xét riêng tư" name="Body" required/>
                        <input type="hidden" name="SubmissionId" value="@Model.Submission.SubmissionId" />
                        <button class="btn btn-outline-info" type="submit">Đăng</button>
                    </form>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="right-sidebar" id="detailContainer">
    <div class="py-3 border-bottom">
        <h4 class=""><span class="fw-semibold">Tệp</span></h4>
        <div class="fs-3">Đã nộp vào @Model.Submission.SubmittedTime.Value.ToString(Converter.TimeWithDateAndMonth)</div>
        @foreach (var file in Model.Files)
        {
            <div class="d-flex p-2 border rounded-1 file-container" data-file-id="@file.FileId">
                @Html.Raw(Helper.GetIconClassFromFileExtension(file.FileType))
                <span class="text-primary text-truncate me-2">
                    @file.OriginalName
                </span>
            </div>
        }
    </div>
    <div class="">
        <div id="comments"></div>
    </div>
    <form class="" method="post">
        <input type="text" placeholder="Thêm nhận xét riêng tư" />
        <button class="btn btn-gray">Đăng</button>
    </form>
    <button id="toggleOffBtn" class="btn btn-secondary toggle-button"><i class="bi bi-toggle-off"></i></button>
</div>
@section scripts {
    <script>
        function initialize() {
            var page = @Model.SearchQuery.Page;
            bindEvents();
            doSearch("#formSearch", page);
            var firstFileId = '@Model.Files.First().FileId';
            selectAndViewFile(firstFileId);
            getComments();
        }
        $(document).ready(function () {
            initialize();
        });
        function bindEvents() {
            var searchTimeout;
            $('input[name="SearchValue"]').on('input', function () {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function () {
                    doSearch("#formSearch", 1);
                }, 2000);
            });
            $("#formSearch").submit(function (e) {
                e.preventDefault();
                doSearch(this, 1);
                return;
            });
            $("#formComment").submit(function (e) {
                e.preventDefault();
                comment(this);
                return;
            });
            $('.file-container').on('click', function (event) {
                event.preventDefault();
                var fileId = $(this).data('file-id');
                selectAndViewFile(fileId);
            });

            $('.btn-status').on('click', function () {
                $(this).toggleClass('active');
                doSearch("#formSearch", 1);
            });

            $('#dropdownMenuButton').on('click', function (event) {
                event.preventDefault();
                $('#studentList').toggleClass('show');
            });
            $('#toggleOnBtn').on('click', function () {
                $('#detailContainer').show();

            });

            $('#toggleOffBtn').on('click', function () {
                $('#detailContainer').hide();

            });

        }

        function selectAndViewFile(fileId) {
            $('.file-container').removeClass('selected');
            $(".file-container[data-file-id='" + fileId + "']").addClass('selected');
            viewFile(fileId);
        }
        function getComments() {
            var testId = @Model.TestId;
            var submissionId = @Model.Submission.SubmissionId;
            $.ajax({
                url: '@Url.Action("GetComments", "Test")',
                type: 'GET',
                data: { testId: testId, submissionId: submissionId },
                success: function (data) {
                    $('#comments').html(data);
                },
                error: function () {
                    alert('Your request is not valid!');
                }
            });
        }
        function viewFile(fileId) {
            var testId = @Model.TestId;
            var submissionId = @Model.Submission.SubmissionId;
            $.ajax({
                url: '@Url.Action("SubmissionFile", "Test")',
                type: 'GET',
                data: { fileId: fileId, testId: testId, submissionId: submissionId },
                success: function (data) {
                    $('#filePreview').html(data);
                },
                error: function () {
                    alert('Your request is not valid!');
                }
            });
        }

        function doSearch(formSearchInput, page) {
            var url = $(formSearchInput).prop("action");
            var postData = $(formSearchInput).serializeArray();
            var statuses = [];
            $('.btn-status.active').each(function () {
                statuses.push($(this).data('status'));
            });
            postData.push(
                { name: 'page', value: page },
                { name: 'statuses', value: statuses.join(',') },
                { name: "searchInDetail", value: false }
            );
            $.ajax({
                url: url,
                type: 'POST',
                data: postData,
                success: function (data) {
                    $('#searchStudent').html(data);
                },
                error: function (xhr) {
                    handleAjaxError(xhr);
                }
            });
        }
        function comment(formSearchInput) {
            var url = $(formSearchInput).prop("action");
            var postData = $(formSearchInput).serializeArray();

            $.ajax({
                url: url,
                type: 'POST',
                data: postData,
                success: function (response) {
                    showToast(response);
                    getComments();
                },
                error: function (xhr) {
                    handleAjaxError(xhr);
                }
            });
        }
    </script>
}
